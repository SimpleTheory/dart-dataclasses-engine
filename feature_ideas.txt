Feature Ideas:
• Iterables are deep copied at the moment with the copyWith generated method, detect if an attribute is iterable and
  create a shallow copy of it within the copyWith generated func!!!
• Refactor JSON bc
    - Maps can't be keys in JSON
    - remove __type in API call for toMap()
• Write complete documentation
    - For this (the engine)(module {readme, library level etc} and function specific)
    - For wrapper (dart side)(module and function specific)
    - Refactor stupid shit
    - Make video

Later:

• Dart 3 is going to have multi-type returns like this:
      (int x, int y) get_coords() => 0,0
      so learn the rules of when that's applicable and do so accordingly when update comes
• Make work with emojis
• Allow parser to detect parents like this Bloc<InitSettingsEvent, InitSettingsState> (right now only receives Bloc
    without any subclasses)
• add type def parsing with their content in json serialization

------- Maybe --------------------------------------------------------------------------
    • Add parsing to extensions
    • parse mixins
    • toMap & fromMap overrides (postponed because of difficulty of implementing at the moment and unnecessary at the moment)


-------- DONE ----------------------------------------------------------------------------
MAPS ARE NOT ITERABLES!!! :(
Change jsonify to be based off of reflection and statically generated because of stupidity ✓
fix 0 attr constructors!!!
notify users about updates
refactor-remove metaclasses
Generate test suite for each dataclass